name: build 
run-name: Build - ${{ github.event.head_commit.message }}

on:
  pull_request:
  push:
    branches: [main]

env:
  IMAGE_NAME: "${{ secrets.APP_ECS_CONTAINER_IMAGE }}:${{ github.sha }}"

permissions:
  contents: read

jobs:
  python-unit-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.9
      uses: actions/setup-python@v3
      with:
        python-version: "3.9"
        cache: 'pip'
    - name: Install dependencies
      working-directory: ./app
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements_test.txt
    - name: Test with pytest
      working-directory: ./app
      run: |
        pytest --junitxml=junit/test-results.xml .        
  
  python-lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.9
      uses: actions/setup-python@v3
      with:
        python-version: "3.9"
        cache: 'pip'
    - name: Install dependencies
      working-directory: ./app    
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements_test.txt
    - name: Run pylint
      working-directory: ./app
      run: |
        pylint **/*.py --fail-under=8  

  python-type-checks:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.9
      uses: actions/setup-python@v3
      with:
        python-version: "3.9"
        cache: 'pip'
    - name: Install dependencies
      working-directory: ./app
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements_test.txt
    - name: Run type checks
      working-directory: ./app
      run: |
        mypy .
        
  python-safety-checks:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.9
      uses: actions/setup-python@v3
      with:
        python-version: "3.9"
        cache: 'pip'
    - name: Install dependencies
      working-directory: ./app
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements_test.txt
    - name: Run python safety checks
      working-directory: ./app
      run: |
        safety check -r requirements.txt           

  docker-lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Run Docker linter
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: ./app/Dockerfile   

  docker-security-scan:
    runs-on: ubuntu-20.04 
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build an image from Dockerfile
        working-directory: ./app
        run: |
          docker build -t ${{ env.IMAGE_NAME }} .

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ env.IMAGE_NAME }}'
          format: 'table'
          output: 'trivy-results.sarif'
          severity: 'HIGH,CRITICAL'
